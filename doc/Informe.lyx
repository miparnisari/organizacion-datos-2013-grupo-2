#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\begin_preamble
\usepackage{titlesec}
\usepackage{graphicx}
\usepackage{color}

\titleformat{\section}
{\color{red}\normalfont\Large\bfseries}{\thesection}{1em}{}

\titleformat{\subsection}
{\color{blue}\normalfont\Large\bfseries}{\thesubsection}{1em}{}

\titleformat{\subsubsection}
{\color{cyan}\normalfont\Large\bfseries}{\thesubsubsection}{1em}{}
\end_preamble
\use_default_options false
\maintain_unincluded_children false
\language spanish
\language_package none
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter courier
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format pdf2
\output_sync 0
\bibtex_command default
\index_command default
\float_placement H
\paperfontsize default
\spacing single
\use_hyperref true
\pdf_title "Indexador de canciones"
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks false
\pdf_pdfborder false
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle true
\papersize a4paper
\use_geometry true
\use_amsmath 1
\use_esint 1
\use_mhchem 0
\use_mathdots 0
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date true
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 3cm
\topmargin 3cm
\rightmargin 3cm
\bottommargin 3cm
\secnumdepth 1
\tocdepth 2
\paragraph_separation skip
\defskip smallskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\listings_params "basicstyle={\footnotesize\ttfamily},emph={si, //,{,}, +,=,<, >, if, para, cada, devolver, continuar, en, de},emphstyle={\color{red}},frame=single,keywordstyle={\color{red}},numbers=left,numbersep=5pt,stepnumber=1,tabsize=2"
\bullet 0 0 17 -1
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title

\series bold
Universidad de Buenos Aires
\begin_inset Newline linebreak
\end_inset

Facultad de Ingeniería
\series default

\begin_inset Newline linebreak
\end_inset

Organización de Datos (75.06)
\begin_inset Newline linebreak
\end_inset

Trabajo Práctico
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Graphics
	filename logo_fiuba.png
	scale 50

\end_inset


\end_layout

\begin_layout Standard

\series bold
Fecha
\series default
: Primer Cuatrimestre de 2013 
\end_layout

\begin_layout Standard

\series bold
Profesor titular
\series default
: Arturo Servetto 
\end_layout

\begin_layout Standard

\series bold
Docente a cargo del TP
\series default
: Maximiliano Stibel 
\end_layout

\begin_layout Standard

\series bold
Grupo
\series default
: 2
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Padrón
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Nombre y apellido
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
E-mail
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
92168
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nadia Galli
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset CommandInset href
LatexCommand href
name "nani16.galli@gmail.com"
type "mailto:"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
92235
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
María Inés Parnisari
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset CommandInset href
LatexCommand href
name "maineparnisari@gmail.com"
type "mailto:"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
92454
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Martín Zaragoza
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset CommandInset href
LatexCommand href
name "zaragozamartin91@gmail.com"
type "mailto:"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
92691
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Nicolás Sibikowski
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset CommandInset href
LatexCommand href
name "niko.sibi@gmail.com"
type "mailto:"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
93395
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Juan Federico Fuld
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset CommandInset href
LatexCommand href
name "juanfedericofuld@hotmail.com"
type "mailto:"

\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Objetivo
\end_layout

\begin_layout Standard
El objetivo del trabajo es crear una aplicación que permita a un usuario
 crear un índice sobre una biblioteca de canciones, y luego poder resolver
 consultas sobre dicha biblioteca, utilizando el índice.
\end_layout

\begin_layout Section
Hipótesis de trabajo
\end_layout

\begin_layout Enumerate
Los archivos a indexar tendrán extensión 
\family typewriter
txt
\family default
.
\end_layout

\begin_layout Enumerate
Las canciones a indexar tendrán el siguiente formato:
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

<autor1>(;<autor2><autor3>...)(-<año>)-<titulo>-<idioma>
\end_layout

\begin_layout Plain Layout

<letras>
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Los parámetros dentro de paréntesis son opcionales.
\end_layout

\begin_layout Enumerate
El campo 
\family typewriter
<idioma>
\family default
 debe ser alguno de los siguientes: 
\end_layout

\begin_deeper
\begin_layout Enumerate
en, english, inglés
\end_layout

\begin_layout Enumerate
sp, spanish, español, espaniol, espanol
\end_layout

\end_deeper
\end_deeper
\begin_layout Enumerate
No habrá dos canciones con el mismo título.
 Si las hubiera, se indexarán ambas, pero al consultar por un título solo
 se devolverá la canción que se haya indexado primero.
\end_layout

\begin_layout Enumerate
El usuario correrá la aplicación en el sistema operativo Linux.
\end_layout

\begin_layout Section
Extensiones posibles
\end_layout

\begin_layout Enumerate
Utilizar técnicas de 
\emph on
stemming
\emph default
 y una lista de 
\emph on
stopwords
\emph default
 para reducir el tamaño final del índice.
\end_layout

\begin_layout Enumerate
Permitir almacenar consultar un título y devolver uno o más resultados.
\end_layout

\begin_layout Section
Fase de diseño
\end_layout

\begin_layout Standard
En la fase de diseño se obtuvo el siguiente diagrama final, que muestra
 las relaciones entre las diferentes estructuras de datos.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename DiagramasManuales/diagrama_general.JPG
	scale 35

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Diagrama general del trabajo.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Section
Fase de implementación
\end_layout

\begin_layout Subsection
Herramientas y conceptos utilizados
\end_layout

\begin_layout Standard
En el desarrollo del trabajo se aplicaron los siguientes conceptos:
\end_layout

\begin_layout Itemize

\emph on
Test Driven Development
\emph default
: consiste en desarrollar pruebas unitarias y de integración del código
 producido.
\end_layout

\begin_layout Itemize

\emph on
Pair Programming
\emph default
: consiste en programar de a pares, para así reducir la aparición de errores
 y de discutir posibles soluciones a problemas.
\end_layout

\begin_layout Standard
Se utilizaron las siguientes herramientas:
\end_layout

\begin_layout Itemize
Entorno de desarrollo: Eclipse
\end_layout

\begin_layout Itemize
Sistema operativo de desarrollo: GNU/Linux
\end_layout

\begin_layout Itemize
Herramientas adicionales: 
\family typewriter
valgrind, cppcheck
\end_layout

\begin_layout Subsection
Descripción
\end_layout

\begin_layout Standard
El trabajo práctico fue dividido en tres capas:
\end_layout

\begin_layout Itemize
La 
\series bold
Capa Física
\series default
 contiene las clases y métodos para trabajar con los datos a bajo nivel.
\end_layout

\begin_layout Itemize
La 
\series bold
Capa Lógica
\series default
 utiliza las primitivas de la Capa Física para crear estructuras de datos
 más complejas y eficientes.
\end_layout

\begin_layout Itemize
La 
\series bold
Capa Interfaz
\series default
 provee la comunicación entre el usuario final y la Capa Lógica.
\end_layout

\begin_layout Subsection
Capa Física
\end_layout

\begin_layout Standard
El siguiente diagrama de clases ilustra los componentes esenciales de la
 capa física:
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename DiagramasManuales/capaFisica.png
	scale 25

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Diagrama de clase de capa física.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
El diseño de las clases 
\family typewriter
RegistroVariable
\family default
 y 
\family typewriter
Bloque
\family default
 no presentaron problemas significativos.
 Las mismas se diseñaron para guardar datos de tipo genérico como arreglos
 de caracteres, los datos luego podrían recuperarse y reinterpretarse como
 fuese necesario con facilidad.
\end_layout

\begin_layout Standard

\family typewriter
RegistroVariable
\family default
 guarda datos como campos junto con un prefijo de longitud de dicho campo.
 
\end_layout

\begin_layout Itemize
Un objeto 
\family typewriter
RegistroVariable
\family default
 puede ser empaquetado y desempaquetado como un arreglo de bytes con el
 siguiente formato: 
\end_layout

\begin_deeper
\begin_layout Standard
\noindent
\align center

\family typewriter
(int tamanioTotal; (int tamanioCampo , chars campo)+)
\end_layout

\end_deeper
\begin_layout Standard
La clase 
\family typewriter
ManejadorRegistrosVariables
\family default
 administra archivos que contienen 
\family typewriter
RegistrosVariables
\family default
.
 
\end_layout

\begin_layout Itemize
En el encabezado del archivo se guardan metadatos de cantidad de registros
 total, cantidad de registros libres y offset del primer registro libre.
\end_layout

\begin_layout Itemize
Los 
\family typewriter
RegistrosVariables
\family default
 son guardados contiguos unos a otros junto con un prefijo de tamaño en
 bytes de cada uno.
 
\end_layout

\begin_layout Itemize
Los 
\family typewriter
RegistrosVariables
\family default
 se los puede recuperar de dos formas:
\end_layout

\begin_deeper
\begin_layout Itemize
Especificando el número de registro que se desea, empezando desde el 0.
 La búsqueda se realiza en forma secuencial.
\end_layout

\begin_layout Itemize
Especificando el offset inicial del registro que se desea.
 El acceso es directo.
\end_layout

\end_deeper
\begin_layout Itemize
Se utiliza una política de first-fit para la administración del espacio
 libre.
 Se utiliza una pila de registros libres o borrados cuyo primer elemento
 es apuntado desde el 
\family typewriter
header
\family default
 (a partir del byte offset) del archivo.
 Al momento de insertar un registro, se busca en la pila el primer 
\family typewriter
RegistroVariable
\family default
 eliminado cuyo tamaño sea suficiente como para guardar el registro nuevo;
 una vez hallado, el registro nuevo es guardado en la posición correcta
 del archivo y el registro libre anterior es removido de la pila de libres.
 Al momento de borrar un registro, el mismo se coloca al principio de la
 pila de libres y en el lugar que ocupaba el registro se conserva su prefijo
 de tamaño y se agrega el byte offset del próximo registro libre.
 
\end_layout

\begin_layout Itemize
La política first-fit puede no ser la más eficiente en cuanto a reutilización
 del espacio libre pero es la más veloz al momento de realizar una nueva
 inserción.
 
\end_layout

\begin_layout Itemize
Al momento de implementar la política de recuperación del espacio libre,
 para asegurar la integridad del archivo, al momento de buscar un registro
 libre para reutilizar, se verifica que su tamaño sea ligeramente superior
 al registro a insertar.
 Al recuperar un registro libre, el mismo se divide en dos partes, una es
 reutilizada para insertar el nuevo registro y otra permanece como registro
 libre pero desvinculado de la pila de libres.
 Esto se implementó de esta manera para preservar las búsquedas secuenciales
 en el archivo.
 
\end_layout

\begin_layout Itemize
Si se dan numerosas bajas, el archivo inevitablemente comenzará a fragmentarse
 , lo que implica que más adelante se deberá realizar una reestructuración
 o refactorización manual del mismo.
\end_layout

\begin_layout Standard
La clase
\family typewriter
 Bloque
\family default
 guarda objetos del tipo 
\family typewriter
RegistroVariable
\family default
 empaquetados como se especificó anteriormente.
 Los 
\family typewriter
Bloque
\family default
s son de tamaño fijo; este tamaño se guarda dentro del archivo 
\family typewriter
Constantes.h
\family default
, y fue prefijado en 4 KB.
\end_layout

\begin_layout Standard
La clase 
\family typewriter
ManejadorBloques
\family default
 administra archivos organizados en 
\family typewriter
Bloques
\family default
 de tamaño fijo.
 
\end_layout

\begin_layout Itemize
La política de recuperación de espacio libre es de pila de bloques libres.
 Se decidió a favor de esta técnica y en contra del uso de un mapa de bits
 de bloques libres ya que nos pareció que era más sencillo implementarlo
 de esta manera.
 
\end_layout

\begin_layout Itemize
Para escribir un nuevo 
\family typewriter
Bloque
\family default
 en el archivo se utiliza la primitiva 
\family typewriter
escribir
\family default
.
\end_layout

\begin_layout Itemize
Para actualizar un 
\family typewriter
Bloque
\family default
, el mismo debe ser leído del archivo, modificado y luego sobrescribirlo
 en el offset original usando la primitiva 
\family typewriter
sobreescribir
\family default
.
\end_layout

\begin_layout Itemize
Para eliminar un 
\family typewriter
Bloque
\family default
, se debe utilizar la primitiva 
\family typewriter
sobreescribir
\family default
, pasándole como parámetro un 
\family typewriter
Bloque 
\family default
vacío.
\end_layout

\begin_layout Itemize
No hay fragmentación apreciable del archivo.
 El mismo se fragmentará de forma apreciable si se eliminaran numerosos
 bloques y cesara la inserción de datos.
 
\end_layout

\begin_layout Itemize
El mayor inconveniente para el diseño de ésta clase fue el diseño de una
 interfaz.
 Resultó complicado ocultar el funcionamiento interno de la clase y crear
 una interfaz sencilla que ocultara al usuario la manipulación a bajo nivel
 de los datos.
\end_layout

\begin_layout Standard
La clase 
\family typewriter
ManejadorArchivosBasicos
\family default
 administra archivos que contienen datos de tipo básico (
\family typewriter
int
\family default
, 
\family typewriter
char
\family default
 , 
\family typewriter
short
\family default
, etc.).
\end_layout

\begin_layout Itemize
Se la implementó para facilitar el manejo de la Tabla de Hash.
\end_layout

\begin_layout Itemize
No presentó mayores dificultades de implementación.
\end_layout

\begin_layout Subsection
Capa Lógica
\end_layout

\begin_layout Subsubsection
Árbol B+
\end_layout

\begin_layout Standard
El siguiente diagrama de clases ilustra el diseño del árbol B+:
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename DiagramasManuales/ArbolBMas.png
	scale 25

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Diagrama de clases de árbol B+
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
Un problema en el diseño del árbol fue definir y controlar las condiciones
 de overflow y underflow.
 Otro inconveniente surgió al intentar abstraerse del tipo de clave que
 se utilizaría, esto se solucionó con la clase 
\emph on
ClaveX
\emph default
 descripta a continuación.
\end_layout

\begin_layout Standard
La clase 
\family typewriter
ArbolBMas
\family default
 administra un archivo como una estructura de árbol B+.
 Se almacena en disco bajo la forma de un archivo en bloques (utilizando
 las primitivas de 
\family typewriter
ManejadorBloques
\family default
) con un bloque dedicado a cada 
\family typewriter
NodoArbol
\family default
.
\end_layout

\begin_layout Standard
La clase 
\family typewriter
RegistroClave
\family default
 contiene un objeto de tipo 
\family typewriter
ClaveX
\family default
 que nos habilita a abstraernos del tipo de clave utilizada para almacenar
 datos en el árbol.
 Tiene definidos todos los operadores de comparación.
 Los RegistroClave se empaquetan como un RegistroVariable, y se desempaquetan
 de una forma particular.
\end_layout

\begin_layout Standard
La clase 
\family typewriter
ClaveX
\family default
 permite el manejo de claves de tipo 
\family typewriter
string
\family default
 o 
\family typewriter
int
\family default
 y puede ser ampliada para manejar otros tipos de datos.
 Contiene como elementos de un vector las claves de cada tipo que maneja.
 Sobrecarga sus métodos para recibir claves de distintos tipos y guarda
 internamente el tipo de clave con el que está trabajando.
\end_layout

\begin_layout Standard
La clase 
\family typewriter
NodoArbol
\family default
 permite la existencia de estructuras distintas para los nodos internos
 y las hojas solucionando el inconveniente de guardar referencias nulas
 de manera innecesaria en el último nivel del árbol.
 Guarda un atributo que permite esta diferenciación.
\end_layout

\begin_layout Standard
La clase 
\family typewriter
NodoSecuencial
\family default
 guarda objetos del tipo RegistroClave y representa las hojas del árbol.
 Puede informar si al insertar o eliminar un registro se produce un overflow
 o underflow respectivamente, además en cada caso devuelve en un vector
 los registros a ser redistribuidos.
 Contiene también una referencia al próximo 
\family typewriter
NodoSecuencial
\family default
 del árbol, implementado como el número de bloque donde está guardado dicho
 nodo.
\end_layout

\begin_layout Standard
La clase 
\family typewriter
NodoInterno
\family default
 guarda objetos del tipo 
\family typewriter
RegistroClave
\family default
 y representa los nodos internos del árbol.
 Puede informar si al insertar o eliminar un registro se produce un overflow
 o underflow respectivamente, pero no devuelve en un vector los registros
 a ser redistribuidos.
 Almacena las claves y las referencias a sus hijos en memoria en dos vectores
 separados.
\end_layout

\begin_layout Subsubsection
Hashing Extensible
\end_layout

\begin_layout Standard
El siguiente diagrama de clases ilustra el diseño del hashing extensible:
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename DiagramasManuales/HashExtensible.png
	scale 50

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Diagrama de clases de Hashing Extensible.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
La clase 
\family typewriter
HashExtensible
\family default
 administra registros como una estructura de Hash Extensible prefijo.
\end_layout

\begin_layout Itemize
El 
\family typewriter
HashExtensible
\family default
 está compuesto por dos archivos, uno es la 
\family typewriter
Tabla
\family default
 y el otro es un 
\family typewriter
ManejadorBloques
\begin_inset Foot
status open

\begin_layout Plain Layout
La 
\family typewriter
Tabla
\family default
 es un archivo de control.
 Los dos archivos fueron separados para facilitar la implementación.
\end_layout

\end_inset


\family default
 donde se guardarán los registros de tipo 
\family typewriter
RegistroClave
\family default
.
 
\end_layout

\begin_deeper
\begin_layout Itemize
Los datos de la 
\family typewriter
Tabla
\family default
 se guardan como datos secuenciales, utilizando el 
\family typewriter
ManejadorArchivoTipoBasico
\family default
 con 
\family typewriter
Tipo=int
\family default
.
 El tamaño de la 
\family typewriter
Tabla
\family default
 se guardará también en dicho archivo.
 La
\family typewriter
 Tabla
\family default
 solo guarda los números de bloque a los que se hace referencia en el archivo
 de bloques del hash.
 Por último, la 
\family typewriter
Tabla
\family default
 tiene dos métodos especiales: uno para agrandarse (
\family typewriter
duplicar()
\family default
) y otro para achicarse (
\family typewriter
dividir()
\family default
).
\end_layout

\begin_layout Itemize
Cada bloque del 
\family typewriter
ManejadorBloques
\family default
 contiene los registros a guardar y un atributo 
\begin_inset Quotes eld
\end_inset

tamaño de dispersión
\begin_inset Quotes erd
\end_inset

.
 
\end_layout

\end_deeper
\begin_layout Itemize
Para insertar un 
\family typewriter
RegistroClave
\family default
 en el archivo, se siguen los siguientes pasos:
\end_layout

\begin_deeper
\begin_layout Enumerate
Se le aplica una función de dispersión a la clave del 
\family typewriter
RegistroClave
\family default
.
 Esta función devuelve una posición de la 
\family typewriter
Tabla
\family default
 donde se guarda el número del bloque en donde debemos guardar el 
\family typewriter
RegistroClave
\family default
.
\end_layout

\begin_layout Enumerate
Si al intentar insertar el 
\family typewriter
RegistroClave
\family default
 en el bloque se produce overflow (es decir, el mismo no cabe en bloque),
 se obtiene el tamaño de dispersión del bloque.
 
\end_layout

\begin_layout Enumerate
Si el tamaño de dispersión del bloque es igual al tamaño de la tabla entonces:
\end_layout

\begin_deeper
\begin_layout Enumerate
Duplicamos la 
\family typewriter
Tabla
\family default
.
\end_layout

\begin_layout Enumerate
En el lugar de la 
\family typewriter
Tabla
\family default
 donde se encontraba la dirección del bloque vamos a cambiarla por la posición
 de un nuevo bloque.
 
\end_layout

\end_deeper
\begin_layout Enumerate
Si el tamaño de dispersión del bloque es menor al tamaño de la 
\family typewriter
Tabla
\family default
 entonces vamos a recorrer la 
\family typewriter
Tabla
\family default
 en forma circular desde la posición de tabla, donde el bloque se desbordó,
 haciendo pasos del tamaño de dispersión por dos y en esos lugares guardaremos
 la posición de un nuevo bloque.
 
\end_layout

\begin_layout Enumerate
Tomamos todos los registros del bloque más el registro que produjo overflow
 y los volvemos a insertar.
\end_layout

\end_deeper
\begin_layout Itemize
Para eliminar un 
\family typewriter
RegistroClave
\family default
, se siguen los siguientes pasos: 
\end_layout

\begin_deeper
\begin_layout Enumerate
Se le aplica una función de dispersión a la clave del 
\family typewriter
RegistroClave
\family default
.
 Esta función devuelve una posición de la 
\family typewriter
Tabla
\family default
 donde se guarda el número del bloque en donde debemos eliminar el 
\family typewriter
RegistroClave
\family default
.
\end_layout

\begin_layout Enumerate
Si al borrar el 
\family typewriter
RegistroClave
\family default
 del bloque se produce underflow:
\end_layout

\begin_deeper
\begin_layout Itemize
Tomar el tamaño de dispersión del bloque y moverse con esta distancia de
 izquierda a derecha de la posición de la 
\family typewriter
Tabla
\family default
, y vemos si guarda el mismo número de bloque.
 
\end_layout

\begin_layout Itemize
Si son distintos no pasa nada, pero si son iguales se recorre la 
\family typewriter
Tabla
\family default
 en forma circular desde la posición de tabla donde el bloque se desbordó,
 haciendo pasos del tamaño de dispersión por dos y en esos lugares guardaremos
 el número del bloque que reemplazará al anterior.
 
\end_layout

\begin_layout Itemize
Si la primera mitad de la 
\family typewriter
Tabla
\family default
 es igual a la segunda mitad, se divide la 
\family typewriter
Tabla
\family default
.
\end_layout

\end_deeper
\end_deeper
\begin_layout Subsubsection
Índice invertido
\end_layout

\begin_layout Standard
Un índice invertido es una estructura de datos que permite recuperar los
 
\begin_inset Quotes eld
\end_inset

documentos
\begin_inset Quotes erd
\end_inset

 (en este caso, archivos de canciones) que contienen ciertos 
\begin_inset Quotes eld
\end_inset

términos
\begin_inset Quotes erd
\end_inset

 (en este caso, palabras de una letra de una canción).
\end_layout

\begin_layout Standard
El siguiente diagrama ilustra la clase correspondiente al índice invertido
 para la búsqueda por frases:
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename DiagramasManuales/IndiceInvertidoPorFrase.jpg
	scale 25

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Diagrama de clases de Indice Invertido.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Los archivos que son necesarios para implementar este índice invertido son:
\end_layout

\begin_layout Itemize

\family typewriter
Archivo_terminos
\family default
: es un archivo secuencial de registros variables donde se guarda el término
 completo.
 Cada término se lo puede indentificar mediante su posición relativa en
 este archivo, este valor lo llamaremos 
\family typewriter
IDtermino
\family default
.
 Sus registros tienen la siguiente estructura:
\end_layout

\begin_deeper
\begin_layout Standard
\noindent
\align center

\family typewriter
(término)
\end_layout

\end_deeper
\begin_layout Itemize

\family typewriter
Archivo_vocabulario
\family default
: es un archivo de tipo árbol B+ con el término completo como identificador
 del registro.
 Sus registros tienen la siguiente estructura:
\end_layout

\begin_deeper
\begin_layout Standard
\noindent
\align center

\family typewriter
(i(término), IDtermino, refListaInvertida)
\end_layout

\end_deeper
\begin_layout Itemize

\family typewriter
Archivo_listas_invertidas
\family default
 : es un archivo de bloques grandes.
 Cada bloque representa una lista invertida.
 Sus registros son de longitud variable y tienen la siguiente estructura:
\end_layout

\begin_deeper
\begin_layout Standard
\noindent
\align center

\family typewriter
((IDdocumento, posicion)+)
\end_layout

\end_deeper
\begin_layout Itemize

\family typewriter
Archivo_listas_posiciones
\family default
 : es un archivo de bloques grandes.
 Cada bloque representa una lista invertida.
 Sus registros son de longitud variable y tienen la siguiente estructura:
\end_layout

\begin_deeper
\begin_layout Standard
\noindent
\align center

\family typewriter
(posicion)
\end_layout

\end_deeper
\begin_layout Itemize

\family typewriter
Archivo_coincidencias
\family default
: este es un archivo secuencial de registros variables.
 Es temporal, con lo cual se eliminará al terminar de indexar los documentos.
 Sus registros tienen la siguiente estructura:
\end_layout

\begin_deeper
\begin_layout Standard
\noindent
\align center

\family typewriter
((IDtermino, posicion)+)
\end_layout

\end_deeper
\begin_layout Subsection
Capa Interfaz
\end_layout

\begin_layout Standard
El diagrama ilustra el diseño de los componentes de esta capa:
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename DiagramasManuales/capaInterfaz.png
	scale 25

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Diagrama de clases de la Interfaz
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
La clase 
\family typewriter
Indexador
\family default
 se encarga de recibir las consultas del usuario, de crear y abrir los archivos
 de índice, y de utilizar los servicios que le provee el 
\family typewriter
ResolvedorConsultas
\family default
.
\end_layout

\begin_layout Standard
Las estructuras que se utilizan para mantener el índice son los siguientes:
\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="7" columns="3">
<features tabularvalignment="middle">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="4cm">
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Tipo de estructura
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Nombre de la estructura
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Estructura de los registros
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
IndiceInvertido
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
indiceSecundarioFrases
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Explicada anteriormente.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
HashingExtensible
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
indicePrimario
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
(i(ID canción) , offset de canción en archivo maestro)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
ManejadorRegistrosVariables
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
archivoMaestro
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
((autor)+, (anio)?, idioma, titulo, letra)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
ArbolBMas
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
indiceSecundarioAutor
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
(i(autor canción + id canción))
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
HashingExtensible
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
indiceSecundarioTitulo
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
(i(titulo canción), id canción)
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
HashingExtensible
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
documentos
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\family typewriter
(i(id canción), nombre archivo original)
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
Manual de usuario
\end_layout

\begin_layout Subsection
Compilación
\end_layout

\begin_layout Standard
La aplicación se compila dentro del directorio “
\family typewriter
src
\family default
”, ejecutando por consola el comando “
\family typewriter
make
\family default
”.
\end_layout

\begin_layout Subsection
Ejecución
\end_layout

\begin_layout Standard
La aplicación se ejecuta por consola, dentro del directorio “
\family typewriter
src
\family default
”.
 de la siguiente forma: 
\end_layout

\begin_layout Standard

\family typewriter
\begin_inset Formula 
\[
\mbox{./main [-función] [parámetros]}
\]

\end_inset


\end_layout

\begin_layout Standard
donde la función y sus parámetros pueden ser: 
\end_layout

\begin_layout Itemize

\family typewriter
-indexar <carpeta de entrada> <carpeta de salida> 
\end_layout

\begin_deeper
\begin_layout Itemize
Este comando toma los archivos que hay en <carpeta de entrada>, y los indexa,
 generando los archivos necesarios en la <carpeta de salida>.
 
\end_layout

\begin_layout Itemize
Si la <carpeta de salida> existía, se le preguntará al usuario si desea
 reindexar la <carpeta de entrada> o si desea anexar las nuevas canciones.
 
\end_layout

\begin_layout Itemize
Para cada archivo de la carpeta, se mostrará por pantalla un mensaje que
 indique si ese archivo se pudo indexar o no.
 
\end_layout

\end_deeper
\begin_layout Itemize

\family typewriter
-consultarTitulo <carpeta de búsqueda> <titulo> 
\end_layout

\begin_deeper
\begin_layout Itemize
Este comando recibe un <título> que se desee buscar en el índice guardado
 dentro de <carpeta de búsqueda>.
 
\end_layout

\begin_layout Itemize
Se mostrará por pantalla el ID de la canción, el título y la letra de la
 misma.
\end_layout

\begin_layout Itemize
Si el campo <titulo> tiene espacios en blancos, se debe escribir el título
 entre comillas dobles (
\begin_inset Quotes eld
\end_inset


\begin_inset Quotes erd
\end_inset

).
\end_layout

\end_deeper
\begin_layout Itemize

\family typewriter
-consultarAutor <carpeta de búsqueda> <autor> 
\end_layout

\begin_deeper
\begin_layout Itemize
Este comando recibe un <autor> que se desee buscar en el índice guardado
 dentro de <carpeta de búsqueda>.
 
\end_layout

\begin_layout Itemize
Se mostrarán por pantalla los IDs de las canciones de <autor>, sus títulos
 y las letras de cada canción.
\end_layout

\begin_layout Itemize
Si el campo <autor> tiene espacios en blancos, se debe escribir el autor
 entre comillas dobles (
\begin_inset Quotes eld
\end_inset


\begin_inset Quotes erd
\end_inset

).
\end_layout

\end_deeper
\begin_layout Itemize

\family typewriter
-consultarFrase <carpeta de búsqueda> <frase> 
\end_layout

\begin_deeper
\begin_layout Itemize
Este comando recibe una <frase> que se desee buscar en el índice guardado
 dentro de <carpeta de búsqueda>.
 
\end_layout

\begin_layout Itemize
Se mostrarán por pantalla los nombres de los archivos de las canciones que
 contengan dicha <frase>.
\end_layout

\begin_layout Itemize
Si el campo <frase> tiene espacios en blancos, se debe escribir la frase
 entre comillas dobles (
\begin_inset Quotes eld
\end_inset


\begin_inset Quotes erd
\end_inset

).
\end_layout

\end_deeper
\begin_layout Itemize

\family typewriter
-borrarCancion <carpeta de búsqueda> <id cancion>
\end_layout

\begin_deeper
\begin_layout Itemize
Este comando recibe un <id cancion> que se desee eliminar del índice guardado
 dentro de <carpeta de búsqueda>.
 
\end_layout

\end_deeper
\begin_layout Subsection
Ejemplos
\end_layout

\begin_layout Itemize
Para indexar la carpeta 
\family typewriter
songs
\family default
 dentro de 
\family typewriter
organizacion-datos-2013-grupo 2
\family default
:
\end_layout

\begin_deeper
\begin_layout Standard

\family typewriter
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

user@notebook:~$ cd Desktop/organizacion-datos-2013-grupo-2/ 
\end_layout

\begin_layout Plain Layout

user@notebook:~/Desktop/organizacion-datos-2013-grupo-2$ ls 
\end_layout

\begin_layout Plain Layout

doc  lib  songs  src  tests 
\end_layout

\begin_layout Plain Layout

user@notebook:~/Desktop/organizacion-datos-2013-grupo-2$ cd src 
\end_layout

\begin_layout Plain Layout

user@notebook:~/Desktop/organizacion-datos-2013-grupo-2/src$ make
\end_layout

\begin_layout Plain Layout

user@notebook:~/Desktop/organizacion-datos-2013-grupo-2/src$ ./main -indexar
 ../songs ../output 
\end_layout

\begin_layout Plain Layout

AVISO: El directorio de salida no existe.
  
\end_layout

\begin_layout Plain Layout

Se creó el directorio de salida.
 
\end_layout

\begin_layout Plain Layout

Se indexó ../songs/joaquin sabina - y nos dieron las diez.txt correctamente!
 
\end_layout

\begin_layout Plain Layout

No se indexó ../songs/at the drive in -invalid.txt porque no cumple el estándar
 especificado.
 
\end_layout

\begin_layout Plain Layout

No se indexó ../songs/daft punk - the game of love.txt porque no cumple el
 estándar especificado.
 
\end_layout

\begin_layout Plain Layout

Se indexó ../songs/madonna - girl gone wild.txt correctamente! 
\end_layout

\begin_layout Plain Layout

No se indexó ../songs/aerosmith-helter skelter.txt porque no cumple el estándar
 especificado.
 
\end_layout

\begin_layout Plain Layout

Se indexó ../songs/keane - somewhere only we know.txt correctamente! 
\end_layout

\begin_layout Plain Layout

Se indexó ../songs/oasis-helter skelter.txt correctamente! 
\end_layout

\begin_layout Plain Layout

Se indexó ../songs/queens of the stone age - Walkin' On The Sidewalks.txt correctam
ente!
\end_layout

\begin_layout Plain Layout

o se indexó ../songs/daft punk - give life back to music.txt porque no cumple
 el estándar especificado.
 
\end_layout

\begin_layout Plain Layout

Se indexó ../songs/joaquin sabina - nos sobran los motivos.txt correctamente!
 
\end_layout

\begin_layout Plain Layout

No se indexó ../songs/madonna - i'm addicted.txt porque no cumple el estándar
 especificado.
\end_layout

\begin_layout Plain Layout

Se indexó ../songs/u2-pride.txt correctamente! 
\end_layout

\begin_layout Plain Layout

Se indexó ../songs/madonna - gang bang.txt correctamente! 
\end_layout

\begin_layout Plain Layout

No se indexó ../songs/archivo vacio.txt porque no cumple el estándar especificado.
 
\end_layout

\begin_layout Plain Layout

Se indexó ../songs/the summer set - cross your fingers.txt correctamente! 
\end_layout

\begin_layout Plain Layout

Se indexó ../songs/one republic - say all i need.txt correctamente! 
\end_layout

\begin_layout Plain Layout

Se indexó ../songs/nicki minaj - starships.txt correctamente! 
\end_layout

\end_inset


\end_layout

\end_deeper
\end_body
\end_document
